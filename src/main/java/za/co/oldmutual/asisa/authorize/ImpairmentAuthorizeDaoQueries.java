package za.co.oldmutual.asisa.authorize;

public class ImpairmentAuthorizeDaoQueries {

  private ImpairmentAuthorizeDaoQueries() {

  }

  public static final String IMPAIRMENT_AUTHORIZE_REQUEST_QUERY =
      "SELECT PERSON.IDENTITY_NUMBER_TYPE_CODE ,PERSON.IDENTITY_NUMBER, NOTIFICATION.POLICY_REF_NUMBER, NOTIFICATION.CREATED_BY, IMPAIRMENT.TIME_SIGNAL, IMPAIRMENT.REASON_FOR_EDIT ,"
          + "IMPAIRMENT.READINGS,IMPAIRMENT.IMPAIRMENT_CODE,IMPAIRMENT.NOTIFICATION_ID,NOTIFICATION.NOTIFICATION_TXN_TYPE,NOTIFICATION.NOTIFICATION_STATUS_CODE  FROM LC_NOTIFIABLE_IMPAIRMENT IMPAIRMENT  JOIN LC_NOTIFICATION NOTIFICATION ON NOTIFICATION.NOTIFICATION_ID = IMPAIRMENT.NOTIFICATION_ID JOIN LC_INSURED_PERSON PERSON ON PERSON.PERSON_ID = NOTIFICATION.PERSON_ID  WHERE"
          + " NOTIFICATION.NOTIFICATION_STATUS_CODE = 'APPROVAL_PENDING' AND NOTIFICATION.NOTIFICATION_TYPE_CODE ='IMPAIRMENT'";

  public static final String FETCH_NOTIFICATION_TRANSACTION_TYPE_QUERY =
      "SELECT NOTIFICATION.NOTIFICATION_TXN_TYPE FROM LC_NOTIFICATION NOTIFICATION JOIN LC_NOTIFIABLE_IMPAIRMENT IMPAIRMENT ON  NOTIFICATION.NOTIFICATION_ID = IMPAIRMENT.NOTIFICATION_ID WHERE NOTIFICATION.NOTIFICATION_ID = :notificationID";

  public static final String FIND_NOTE_BY_NOTIFICATION_ID_QUERY =
      "SELECT NOTE.NOTE_ID, NOTE.NOTE_TEXT, NOTE.IS_SCRATCHPAD AS SCRATCHPAD FROM LC_NOTE NOTE WHERE NOTIFICATION_ID = :notificationID";

  public static final String FETCH_INSURED_PERSON_QUERY = "SELECT PERSON.* "
      + "FROM LC_NOTIFIABLE_IMPAIRMENT IMPAIRMENT  "
      + "JOIN LC_NOTIFICATION NOTIFICATION ON NOTIFICATION.NOTIFICATION_ID = IMPAIRMENT.NOTIFICATION_ID  "
      + "JOIN LC_INSURED_PERSON PERSON ON PERSON.PERSON_ID = NOTIFICATION.PERSON_ID  WHERE IMPAIRMENT.NOTIFICATION_ID  = :notificationID ";

  public static final String FETCH_OLD_NOTIFIABLE_IMPAIRMENT_QUERY =
      "SELECT NOTIFICATION.POLICY_REF_NUMBER ,IMPAIRMENTAUDIT.NOTIFICATION_ID,IMPAIRMENTAUDIT.TIME_SIGNAL,IMPAIRMENTAUDIT.READINGS, "
          + "IMPAIRMENTAUDIT.IMPAIRMENT_CODE,IMPAIRMENTAUDIT.LIFE_SPEC_CODES,IMPAIRMENTAUDIT.LIFE_SYMBOL_CODES,NOTIFICATION.POLICY_TYPE_CODE,  IMPAIRMENTAUDIT.CREATED_DATE,IMPAIRMENTAUDIT.CREATED_BY,IMPAIRMENTAUDIT.REASON_FOR_EDIT,NOTIFICATION.NOTIFICATION_SOURCE FROM "
          + "LC_NOTIFIABLE_IMPAIRMENT_AUDIT IMPAIRMENTAUDIT JOIN LC_NOTIFICATION NOTIFICATION  ON IMPAIRMENTAUDIT.NOTIFICATION_ID = NOTIFICATION.NOTIFICATION_ID JOIN LC_NOTIFIABLE_IMPAIRMENT IMPAIRMENT ON IMPAIRMENT.NOTIFICATION_ID = NOTIFICATION.NOTIFICATION_ID JOIN LC_INSURED_PERSON PERSON ON PERSON.PERSON_ID = NOTIFICATION.PERSON_ID WHERE "
          + "IMPAIRMENTAUDIT.NOTIFICATION_ID = :notificationID ORDER  BY NOTIFIABLE_IMPAIRMENT_AUDIT_ID DESC OFFSET 1 ROWS FETCH NEXT 1 ROWS ONLY";

  public static final String FETCH_NEW_NOTIFIABLE_IMPAIRMENT_QUERY =
      "SELECT NOTIFICATION.POLICY_REF_NUMBER ,IMPAIRMENT.NOTIFICATION_ID,IMPAIRMENT.TIME_SIGNAL,IMPAIRMENT.READINGS,"
          + " IMPAIRMENT.IMPAIRMENT_CODE,IMPAIRMENT.LIFE_SPEC_CODES,IMPAIRMENT.LIFE_SYMBOL_CODES,IMPAIRMENT.REASON_FOR_EDIT,NOTIFICATION.POLICY_TYPE_CODE,NOTIFICATION.CREATED_DATE,NOTIFICATION.CREATED_BY,NOTIFICATION.NOTIFICATION_SOURCE  FROM  LC_NOTIFICATION NOTIFICATION "
          + "JOIN LC_NOTIFIABLE_IMPAIRMENT IMPAIRMENT ON NOTIFICATION.NOTIFICATION_ID = IMPAIRMENT.NOTIFICATION_ID  JOIN LC_INSURED_PERSON PERSON ON PERSON.PERSON_ID = NOTIFICATION.PERSON_ID"
          + " WHERE IMPAIRMENT.NOTIFICATION_ID = :notificationID";

  public static final String IMPAIRMENT_AUDIT_QUERY =
      "SELECT NOTIFICATION.POLICY_REF_NUMBER ,IMPAIRMENTAUDIT.NOTIFICATION_ID,IMPAIRMENTAUDIT.TIME_SIGNAL,IMPAIRMENTAUDIT.READINGS, "
          + "IMPAIRMENTAUDIT.IMPAIRMENT_CODE,IMPAIRMENTAUDIT.LIFE_SPEC_CODES,IMPAIRMENTAUDIT.LIFE_SYMBOL_CODES,NOTIFICATION.POLICY_TYPE_CODE,  IMPAIRMENTAUDIT.CREATED_DATE,IMPAIRMENTAUDIT.CREATED_BY,IMPAIRMENTAUDIT.REASON_FOR_EDIT,NOTIFICATION.NOTIFICATION_SOURCE FROM "
          + "LC_NOTIFIABLE_IMPAIRMENT_AUDIT IMPAIRMENTAUDIT  JOIN LC_NOTIFICATION NOTIFICATION ON IMPAIRMENTAUDIT.NOTIFICATION_ID = NOTIFICATION.NOTIFICATION_ID JOIN LC_NOTIFIABLE_IMPAIRMENT IMPAIRMENT ON IMPAIRMENT.NOTIFICATION_ID = NOTIFICATION.NOTIFICATION_ID JOIN LC_INSURED_PERSON PERSON ON PERSON.PERSON_ID = NOTIFICATION.PERSON_ID WHERE "
          + "IMPAIRMENTAUDIT.NOTIFICATION_ID = :notificationID ORDER BY NOTIFIABLE_IMPAIRMENT_AUDIT_ID DESC OFFSET 1 ROWS FETCH NEXT 1 ROWS ONLY";

  public static final String REVERT_OLD_NOTIFIABLE_IMPAIRMENT_QUERY =
      "UPDATE LC_NOTIFIABLE_IMPAIRMENT SET TIME_SIGNAL = :timeSignal, READINGS = :readings, REASON_FOR_EDIT = :updateReason "
          + "WHERE NOTIFICATION_ID = :notificationID";

  public static final String UPDATE_REMARK_QUERY =
      "UPDATE LC_NOTIFIABLE_IMPAIRMENT SET REASON_FOR_EDIT= :updateReason "
          + "WHERE NOTIFICATION_ID = :notificationID ";

  public static final String FETCH_IMPAIRMENT_QUERY =
      "SELECT IMPAIRMENT_CODE,READINGS,TIME_SIGNAL,LIFE_SPEC_CODES,LIFE_SYMBOL_CODES,NOTIFICATION_ID,REASON_FOR_EDIT,NOTIFIABLE_IMPAIRMENT_ID"
          + " FROM LC_NOTIFIABLE_IMPAIRMENT IMPAIRMENT WHERE NOTIFICATION_ID = :notificationID";

  public static final String INSERT_NOTIFIABLE_IMPAIRMENT_AUDIT_QUERY =
      "INSERT INTO LC_NOTIFIABLE_IMPAIRMENT_AUDIT (NOTIFICATION_ID, IMPAIRMENT_CODE , TIME_SIGNAL, READINGS, "
          + "LIFE_SPEC_CODES, LIFE_SYMBOL_CODES, REASON_FOR_EDIT, NOTIFICATION_STATUS_CODE, NOTIFICATION_TXN_TYPE, ASTUTE_REF_NO, CREATED_BY, CREATED_DATE, IS_ACTIVE) "
          + "VALUES (:notificationID, :impairment.code, :timeSignal, :readings, :specialInvestigationcode, "
          + " :symbolcode, :updateReason, :notifiableStatusCode, :notificationTxnType, :astuteRefNo, :createdBy, CURRENT_TIMESTAMP, :isActive)";

  public static final String UPDATE_NOTIFICATION_QUERY =
      "UPDATE LC_NOTIFICATION SET NOTIFICATION_STATUS_CODE = :notificationStatusCode, IS_ACTIVE = :isActive WHERE NOTIFICATION_ID = :notificationID AND NOTIFICATION_TXN_TYPE = :transType AND NOTIFICATION_STATUS_CODE ='APPROVAL_PENDING'";

public static final String GET_CREATED_BY_FOR_IMPAIRMENT =  "SELECT IMPAIRMENTAUDIT.CREATED_BY FROM "
          + "LC_NOTIFIABLE_IMPAIRMENT_AUDIT IMPAIRMENTAUDIT JOIN LC_NOTIFICATION NOTIFICATION ON IMPAIRMENTAUDIT.NOTIFICATION_ID = NOTIFICATION.NOTIFICATION_ID JOIN LC_NOTIFIABLE_IMPAIRMENT IMPAIRMENT ON IMPAIRMENT.NOTIFICATION_ID = NOTIFICATION.NOTIFICATION_ID JOIN LC_INSURED_PERSON PERSON ON PERSON.PERSON_ID = NOTIFICATION.PERSON_ID WHERE "
          + " IMPAIRMENTAUDIT.NOTIFICATION_ID = :notificationID ORDER BY NOTIFIABLE_IMPAIRMENT_AUDIT_ID DESC OFFSET 1 ROWS FETCH NEXT 1 ROWS ONLY";

}
